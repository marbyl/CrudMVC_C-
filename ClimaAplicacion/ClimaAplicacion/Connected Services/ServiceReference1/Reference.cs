//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClimaAplicacion.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClimaBO", Namespace="http://schemas.datacontract.org/2004/07/AccesoDatos.Entidades")]
    [System.SerializableAttribute()]
    public partial class ClimaBO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descripcionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> fechaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> idCiudadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nombreCiudadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> temperaturaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string descripcion {
            get {
                return this.descripcionField;
            }
            set {
                if ((object.ReferenceEquals(this.descripcionField, value) != true)) {
                    this.descripcionField = value;
                    this.RaisePropertyChanged("descripcion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> fecha {
            get {
                return this.fechaField;
            }
            set {
                if ((this.fechaField.Equals(value) != true)) {
                    this.fechaField = value;
                    this.RaisePropertyChanged("fecha");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> idCiudad {
            get {
                return this.idCiudadField;
            }
            set {
                if ((this.idCiudadField.Equals(value) != true)) {
                    this.idCiudadField = value;
                    this.RaisePropertyChanged("idCiudad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nombreCiudad {
            get {
                return this.nombreCiudadField;
            }
            set {
                if ((object.ReferenceEquals(this.nombreCiudadField, value) != true)) {
                    this.nombreCiudadField = value;
                    this.RaisePropertyChanged("nombreCiudad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> temperatura {
            get {
                return this.temperaturaField;
            }
            set {
                if ((this.temperaturaField.Equals(value) != true)) {
                    this.temperaturaField = value;
                    this.RaisePropertyChanged("temperatura");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/obtenerClimas", ReplyAction="http://tempuri.org/IService1/obtenerClimasResponse")]
        ClimaAplicacion.ServiceReference1.ClimaBO[] obtenerClimas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/obtenerClimas", ReplyAction="http://tempuri.org/IService1/obtenerClimasResponse")]
        System.Threading.Tasks.Task<ClimaAplicacion.ServiceReference1.ClimaBO[]> obtenerClimasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/agregarClima", ReplyAction="http://tempuri.org/IService1/agregarClimaResponse")]
        int agregarClima(ClimaAplicacion.ServiceReference1.ClimaBO objetoGuardar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/agregarClima", ReplyAction="http://tempuri.org/IService1/agregarClimaResponse")]
        System.Threading.Tasks.Task<int> agregarClimaAsync(ClimaAplicacion.ServiceReference1.ClimaBO objetoGuardar);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : ClimaAplicacion.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<ClimaAplicacion.ServiceReference1.IService1>, ClimaAplicacion.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ClimaAplicacion.ServiceReference1.ClimaBO[] obtenerClimas() {
            return base.Channel.obtenerClimas();
        }
        
        public System.Threading.Tasks.Task<ClimaAplicacion.ServiceReference1.ClimaBO[]> obtenerClimasAsync() {
            return base.Channel.obtenerClimasAsync();
        }
        
        public int agregarClima(ClimaAplicacion.ServiceReference1.ClimaBO objetoGuardar) {
            return base.Channel.agregarClima(objetoGuardar);
        }
        
        public System.Threading.Tasks.Task<int> agregarClimaAsync(ClimaAplicacion.ServiceReference1.ClimaBO objetoGuardar) {
            return base.Channel.agregarClimaAsync(objetoGuardar);
        }
    }
}
